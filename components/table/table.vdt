import {eachChildren} from '../utils';
import {TableColumn} from './column';
import {makeStyles} from './styles';
import {isStringOrNumber} from 'intact-shared';
import {getClassAndStyleForFixed} from './useColumns';

const {data, children, className, fixHeader} = this.get();
const {schemes, columns} = this.columns();

const classNameObj = {
    'k-table': true,
    'k-fix-header': fixHeader,
    [className]: className,
    [makeStyles()]: true,
};

const style = isStringOrNumber(fixHeader) ? 
    {maxHeight: `${fixHeader}px`} :
    null;

<div class={classNameObj}>
    <div class="k-table-wrapper" style={style}>
        <table>
            <colgroup>
                <col v-for={schemes} 
                    width={$value.width}
                    class={{[$value.className]: $value.className}}
                />
            </colgroup>
            <thead>
                <tr>{columns}</tr>
            </thead>
            <tbody>
                <tr v-for={data}>
                    <td v-for={schemes} v-for-value="scheme"
                        {...getClassAndStyleForFixed(scheme)}
                    >
                        {$value[scheme.key]}
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
