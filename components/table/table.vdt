import {eachChildren} from '../utils';
import {TableColumn} from './column';
import {makeStyles} from './styles';
import {isStringOrNumber} from 'intact-shared';
import {getClassAndStyleForFixed} from './useFixedColumns';

const {data, children, className, fixHeader} = this.get();
const {getColumns} = this.columns;
const columns = getColumns();
const {onScroll, scrollPosition, hasFixed} = this.fixedColumns;
const classNameObj = {
    'k-table': true,
    'k-fix-header': fixHeader,
    [`k-scroll-${scrollPosition.value}`]: true,
    'k-fix-columns': hasFixed.value,
    [className]: className,
    [makeStyles()]: true,
};

const style = isStringOrNumber(fixHeader) ? 
    {maxHeight: `${fixHeader}px`} :
    null;

<div class={classNameObj}>
    <div class="k-table-wrapper" style={style} ev-scroll={onScroll}>
        <table>
            <colgroup>
                <col v-for={columns} 
                    width={$value.props.width}
                    class={{[$value.props.className]: $value.props.className}}
                />
            </colgroup>
            <thead>
                <tr>{columns}</tr>
            </thead>
            <tbody>
                <tr v-for={data}>
                    <td v-for={columns} v-for-value="column"
                        {...getClassAndStyleForFixed(column.props)}
                    >
                        {$value[column.key]}
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
