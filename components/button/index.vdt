import {createVNode as h} from 'intact';

const {
    type, className, size, icon, circle, ref, key, tabindex,
    tagName, htmlType, fluid, children, loading, disabled,
    name, tagProps, _checkType, ghost, ...rest
} = this.get();

const checked = this.isChecked();
const classNameObj = {
    'k-btn': true,
    [`k-${type}`]: type,
    'k-btn-icon': icon,
    [className]: className, 
    'k-circle': circle,
    'k-loading': loading,
    'k-fluid': fluid,
    'k-active': checked,
    'k-disabled': disabled || loading,
    'k-ghost': ghost,
};
// type and size may both be default
if (size !== 'default') classNameObj[`k-${size}`] = true;

const Button = props => {
    if (props.href && tagName === 'button') {
        tagName = 'a';
    }
    if (tagName === 'button') {
        // set type of html button
        props = {...props, type: htmlType};
    }

    return h(tagName, props);
}

const buttonGroup = this.buttonGroup;
const checkType = buttonGroup ? buttonGroup.get('checkType') : 'none';

<Button class={classNameObj}
    {...rest}
    {...tagProps}
    ref={this.elementRef}
    tabindex={disabled || loading ? '-1' : tabindex}
    ev-click={this.onClick}
    ev-mouseup={this.onMouseUp}
>
    {children}
    <input type={checkType} v-if={checkType !== 'none'}
        name={name} 
        checked={checked}
        tabindex="-1"
    />
</Button>
