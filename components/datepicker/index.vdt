import {DropdownMenu} from '../dropdown';
import {DatepickerCalendar} from './calendar';
import {DatepickerTime} from './time';
import {Icon} from '../icon';
import {Button} from '../button';
import {_$} from '../../i18n';
import {makePanelStyles} from './styles';
import {PanelTypes, PanelFlags} from './usePanel';

const {type, range} = this.get();
const {value: {value}, onChangeDate, onConfirm, onChangeTime, onChangeDateForRange} = this.value;
const classNameObj = {
    'k-datepicker-panel': true,
    [makePanelStyles()]: true,
};

const {startPanel, endPanel} = this.panel;
const getPanel = (flag) => {
    const panel = flag === PanelFlags.Start ? startPanel : endPanel; 
    return (
        <template>
            <DatepickerCalendar
                v-if={panel.value === PanelTypes.Date}
                value={value}
                ev-$change:value={onChangeDate}
                type={type === 'datetime' ? 'date' : type}
            />
            <DatepickerTime
                value={Array.isArray(value) ? value[value.length - 1] : value}
                ev-$change:value={onChangeTime}
                format={this.formats.getValueFormat()}
                v-else
            />
        </template>
    );
};

<t:super>
    <b:base-menu>
        <DropdownMenu class={classNameObj}>
            <div class="k-datepicker-calendars">
                {getPanel(PanelFlags.Start)}
                {range ? getPanel(PanelFlags.End) : null} 
            </div>
            <div v-if={type === 'datetime'} class="k-datepicker-footer">
                <Button type="primary" size="small"
                    disabled={!value}
                    ev-click={onConfirm}
                >{_$('确定')}</Button>
            </div>
        </DropdownMenu>
    </b:base-menu>
    <b:suffix>
        <Icon class="k-icon-calendar" />
    </b:suffix>
</t:super>
