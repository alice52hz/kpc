import {linkEvent} from 'intact';
import {DropdownMenu} from '../dropdown';
import {DatepickerCalendar} from './calendar';
import {DatepickerTime} from './time';
import {Icon} from '../icon';
import {Button} from '../button';
import {_$} from '../../i18n';
import {makePanelStyles} from './styles';
import {PanelTypes, PanelFlags} from './usePanel';
import {last} from './helpers';
import {isFunction} from 'intact-shared';

const {type, range, multiple, shortcuts} = this.get();
const {
    value: {value},
    onChangeDate,
    onConfirm,
    onChangeTime,
    onChangeDateForRange,
    getTimeValue,
} = this.value;
const lastValue = last(value);
const classNameObj = {
    'k-datepicker-content': true,
    [makePanelStyles()]: true,
};

const {startPanel, endPanel, getPanel, startRef, endRef} = this.panel;
const generatePanel = (flag) => {
    const panel = getPanel(flag);
    return (
        <template>
            <DatepickerCalendar
                v-if={panel.value === PanelTypes.Date}
                value={value}
                ev-change={onChangeDate}
                type={type === 'datetime' ? 'date' : type}
                flag={flag}
                ref={flag === PanelFlags.Start ? startRef : endRef}
            />
            <DatepickerTime
                value={getTimeValue(flag)}
                ev-$change:value={v => onChangeTime(v, flag)}
                format={this.formats.getValueFormat()}
                v-else
            />
        </template>
    );
};

<t:super>
    <b:base-menu>
        <DropdownMenu class={classNameObj}>
            <div class="k-datepicker-shortcuts" v-if={shortcuts && shortcuts.length}>
                <div v-for={shortcuts}
                    class="k-datepicker-shortcut"
                    ev-click={linkEvent($value, this.setByShortcut)}
                >
                    {isFunction($value.label) ? $value.label() : $value.label}
                </div>
            </div>
            <div class="k-datepicker-wrapper">
                <div class="k-datepicker-calendars">
                    {generatePanel(PanelFlags.Start)}
                    {range ? generatePanel(PanelFlags.End) : null} 
                </div>
                <div v-if={type === 'datetime'} class="k-datepicker-footer">
                    <Button type="primary" size="small"
                        disabled={
                            !lastValue ||
                            range && lastValue.length < 2 ||
                            startPanel.value === PanelTypes.Date &&
                            endPanel.value === PanelTypes.Date
                        }
                        ev-click={onConfirm}
                    >{_$('确定')}</Button>
                </div>
            </div>
        </DropdownMenu>
    </b:base-menu>
    <b:suffix>
        <Icon class="k-icon-calendar" />
    </b:suffix>
</t:super>
