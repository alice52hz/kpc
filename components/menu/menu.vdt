import {DropdownMenu} from '../dropdown';
import {getRestProps} from '../utils';
import makeStyles from './menuStyles';
import {isDropdown} from './useDropdown';

const {children, className} = this.get();
const {collapse, theme, type, size} = (this.rootMenu || this).get();
const isRootMenu = !this.rootMenu;
const isDropdownMenu = !isRootMenu && isDropdown(this.rootMenu);
const classNameObj = {
    'k-menu': true,
    [className]: className,
    [`k-${theme}`]: (isRootMenu || isDropdownMenu) && theme,
    [`k-${size}`]: isRootMenu && size !== 'default',
    'k-collapsed': isRootMenu && collapse,
    [`k-${type}`]: isRootMenu && type,
    [makeStyles()]: true,
};

const content = (
    <template>
        <div class="k-menu-header" v-if={$blocks.header}>
            <b:header />
        </div>
        {children}
    </template>
);

<template>
    <div v-if={!isDropdownMenu}
        {...getRestProps(this)}
        class={classNameObj}
    >{content}{}</div>
    <DropdownMenu v-else 
        {...getRestProps(this)}
        class={classNameObj}
    >{content}</DropdownMenu>
</template>
